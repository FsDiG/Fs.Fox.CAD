## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
## 忽略Visual Studio临时文件、生成结果和由VisualStudio常用插件生成的文件。
##
## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

# User-specific files
# 用户特定文件
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
# 用户特定文件 (MonoDevelop/Xamarin Studio)
*.userprefs

# Build results
# Build 结果
# 语法：[abc]匹配任何一个列在方括号中的字符（要么匹配一个 a，要么匹配一个 b，要么匹配一个 c）——如 *.[oa]表明Git忽略所有以 .o 或 .a 结尾的文件
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/

# Visual Studio 2015/2017 cache/options directory
# Visual Studio 2015/2017 缓存/选项 目录
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
# 如果您有在wwwroot中创建项目静态文件的任务，请取消注释
#wwwroot/

# Visual Studio 2017 auto generated files
# Visual Studio 2017自动生成的文件
Generated\ Files/

# MSTest test Results
# MSTest测试结果
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUNIT
# NUnit 是 JUnit 的 .NET 版，支持所有 .NET 语言，完全使用 C# 编写，并进行完全重新设计以利用很多高级的 .NET 语言特性，例如定制属性以及其他相关的反射功能。
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
# ATL项目的生成结果
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
# Benchmark结果
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# StyleCop
# 代码检测工具
StyleCopReport.xml

# Files built by Visual Studio
# Visual Studio built的文件
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
# Chutzpah测试文件
_Chutzpah*

# Visual C++ cache files
# Visual C++ 缓存文件
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
# 应用程序性能分析工具
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
# Visual Studio 跟踪文件
*.e2e

# TFS 2012 Local Workspace
# TFS 2012 本地工作区
$tf/

# Guidance Automation Toolkit
# 这套工具旨在简化将可重用的代码集成到应用程序的过程，使架构师能将通常需手动执行的一系列开发工作自动化起来。 
# 使用此工具，还能确保重复性的、易出错的开发工作以合理、一致的方式完成，并能缩短软件开发时间。
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding add-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
# Installshield 输出文件夹
[Ee]xpress/

# DocProject is a documentation generator add-in
# DocProject 是一个文档生成器外接程序
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
# 注意：如果要签入web部署设置，请在下一行添加注释，
# 但是数据库连接字符串（带有可能的密码）将是未加密的
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
# Microsoft Azure Web App发布设置。
# 如果您想签入Azure Web App发布设置，请在下一行添加注释，但这些脚本中包含的敏感信息将不加密
PublishScripts/

# NuGet Packages
# NuGet包
*.nupkg
# The packages folder can be ignored because of Package Restore
# 由于Package Restore，包文件夹可以忽略
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
# 除了build/，它用作MSBuild目标。
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
# 必要时取消注释，但通常需要时会重新生成注释
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
# NuGet v3的project.json文件生成更多可忽略的文件
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
# Windows应用商店应用程序包目录和文件
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx

# Visual Studio cache files
# Visual Studio缓存文件
# files ending in .cache can be ignored
# 可以忽略以.cache结尾的文件
*.[Cc]ache
# but keep track of directories ending in .cache
# 但要跟踪以.cache结尾的目录
!?*.[Cc]ache/

# Others
# 其他
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# 包含强名称文件可能会带来安全风险
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
#由于有多个工作流，取消注释下一行以忽略bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/
# ASP.NET Core default setup: bower directory is configured as wwwroot/lib/ and bower restore is true
#ASP.NET核心默认设置：bower目录配置为wwwroot/lib/并且bower restore为true
**/wwwroot/lib/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
#将旧项目文件转换为新的Visual Studio版本的备份和报告文件。不需要备份文件，因为我们有git；
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
# 商业智能项目
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
# GhostDoc插件设置文件
*.GhostDoc.xml

# Node.js Tools for Visual Studio
# 用于Visual Studio的Node.js工具
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
# Visual Studio 6生成日志
*.plg

# Visual Studio 6 workspace options file
# Visual Studio 6工作区选项文件
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
# Visual Studio 6自动生成的工作区文件（包含打开的文件等）
*.vbw

# Visual Studio LightSwitch build output
# Visual Studio LightSwitch生成输出
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
# Paket依赖关系管理器
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# JetBrains Rider
.idea/
*.sln.iml

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# Cake-如果你正在使用它，请取消注释
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
# Telerik的JustMock配置文件
*.jmconfig

# BizTalk build output
# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
# OpenCover UI分析结果
OpenCover/

# Azure Stream Analytics local run output
# Azure流分析本地运行输出
ASALocalRun/

# MSBuild Binary and Structured Log
# MSBuild二进制和结构化日志
*.binlog

# NVidia Nsight GPU debugger configuration file
# NVidia Nsight GPU调试器配置文件
*.nvuser

# MFractors (Xamarin productivity tool) working folder
# MFractors（Xamarin生产力工具）工作文件夹
.mfractor/

# Local History for Visual Studio
# Visual Studio 的本地历史记录
.localhistory/

# BeatPulse healthcheck temp database 
# BeatPulse healthcheck 临时数据库
healthchecksdb
