<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006">
    <Style x:Key="BlueButtonBorder" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" Background="{TemplateBinding Control.Background}">
                        <Grid>
                            <Border x:Name="HoverMask" BorderThickness="1" BorderBrush="#FFCCCCCC" Background="White"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsEnabled" Value="true"/>
                                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HoverMask" Property="Border.BorderBrush" Value="#FF0261BF"/>
                            <Setter TargetName="HoverMask" Property="Border.Background" Value="#FFC8E8F7"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsEnabled" Value="true"/>
                                <Condition Property="ButtonBase.IsPressed" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HoverMask" Property="Border.BorderBrush" Value="#FF0261BF"/>
                            <Setter TargetName="HoverMask" Property="Border.Background" Value="#FFB1D3F1"/>
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="B" Property="UIElement.Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BlueButton" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" Background="{TemplateBinding Control.Background}">
                        <Grid>
                            <Border x:Name="HoverMask" BorderThickness="1" BorderBrush="#FF0261BF" Background="#FFC8E8F7"
                      Visibility="Hidden"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsEnabled" Value="true"/>
                                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HoverMask" Property="UIElement.Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsEnabled" Value="true"/>
                                <Condition Property="ButtonBase.IsPressed" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HoverMask" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="HoverMask" Property="Border.Background" Value="#FFB1D3F1"/>
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="B" Property="UIElement.Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" Background="{TemplateBinding Control.Background}" CornerRadius="3"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}">
                        <Grid>
                            <Border x:Name="HoverMask" CornerRadius="3"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsEnabled" Value="true"/>
                                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HoverMask" Property="Border.Background" Value="#19000000"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsEnabled" Value="true"/>
                                <Condition Property="ButtonBase.IsPressed" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HoverMask" Property="Border.Background" Value="#26000000"/>
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="HoverMask" Property="Border.Background" Value="#19000000"/>
                            <Setter TargetName="B" Property="UIElement.Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RecButton" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="#c4545454" CornerRadius="1,1,0,0" BorderThickness="0"
                  BorderBrush="#FF323232" Margin="2,4,0,0">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsEnabled" Value="true"/>
                                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="FrameworkElement.Margin" Value="1,3,-1,0"/>
                            <Setter TargetName="Border" Property="Border.BorderThickness" Value="1,1,1,0"/>
                            <Setter TargetName="Border" Property="Border.BorderBrush" Value="#FF797979"/>
                            <Setter TargetName="Border" Property="Border.Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint=" 0.5,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStop Color="#c4606060" Offset="0"/>
                                            <GradientStop Color="#c45b5b5b" Offset="0.5"/>
                                            <GradientStop Color="#c4545454" Offset="1"/>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsEnabled" Value="true"/>
                                <Condition Property="ButtonBase.IsPressed" Value="true"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="UIElement.Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RecButton_V" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="#FF545454" CornerRadius="1,0,0,1" BorderThickness="0"
                  BorderBrush="#FF323232" Margin="1,2,0,2">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsEnabled" Value="true"/>
                                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="FrameworkElement.Margin" Value="0,1,0,1"/>
                            <Setter TargetName="Border" Property="Border.BorderThickness" Value="1,1,0,1"/>
                            <Setter TargetName="Border" Property="Border.BorderBrush" Value="#FF797979"/>
                            <Setter TargetName="Border" Property="Border.Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint=" 0.5,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStop Color="#FF606060" Offset="0"/>
                                            <GradientStop Color="#FF5b5b5b" Offset="0.5"/>
                                            <GradientStop Color="#FF545454" Offset="1"/>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsEnabled" Value="true"/>
                                <Condition Property="ButtonBase.IsPressed" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="FrameworkElement.Margin" Value="0,1,0,1"/>
                            <Setter TargetName="Border" Property="Border.BorderThickness" Value="1,1,0,1"/>
                            <Setter TargetName="Border" Property="Border.BorderBrush" Value="#FF797979"/>
                            <Setter TargetName="Border" Property="Border.Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint=" 0.5,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStop Color="#FF545454" Offset="0"/>
                                            <GradientStop Color="#FF4D4D4D" Offset="0.5"/>
                                            <GradientStop Color="#FF464646" Offset="1"/>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="UIElement.Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HatchButton" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="Transparent" BorderBrush="Transparent" BorderThickness="1">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsEnabled" Value="true"/>
                                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Border.BorderBrush" Value="#FF333333"/>
                            <Setter TargetName="Border" Property="Border.Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint=" 0.5,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStop Color="#FF787878" Offset="0"/>
                                            <GradientStop Color="#FF6A6A6A" Offset="0.5"/>
                                            <GradientStop Color="#FF5C5C5C" Offset="1"/>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsEnabled" Value="true"/>
                                <Condition Property="ButtonBase.IsPressed" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Border.BorderBrush" Value="#FF212121"/>
                            <Setter TargetName="Border" Property="Border.Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint=" 0.5,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStop Color="#FF747474" Offset="0"/>
                                            <GradientStop Color="#FF595959" Offset="0.5"/>
                                            <GradientStop Color="#FF424242" Offset="1"/>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="UIElement.Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DackButton" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="#FF545454" BorderThickness="1" BorderBrush="#FF7F7F7F">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsEnabled" Value="true"/>
                                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Border.Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint=" 0.5,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStop Color="#FF787878" Offset="0"/>
                                            <GradientStop Color="#FF6A6A6A" Offset="0.5"/>
                                            <GradientStop Color="#FF5C5C5C" Offset="1"/>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsEnabled" Value="true"/>
                                <Condition Property="ButtonBase.IsPressed" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Border.Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint=" 0.5,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStop Color="#FF747474" Offset="0"/>
                                            <GradientStop Color="#FF595959" Offset="0.5"/>
                                            <GradientStop Color="#FF424242" Offset="1"/>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="UIElement.Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DackDarkButton" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="#FF545454" BorderThickness="1" BorderBrush="Black">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsEnabled" Value="true"/>
                                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Border.Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint=" 0.5,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStop Color="#FF787878" Offset="0"/>
                                            <GradientStop Color="#FF6A6A6A" Offset="0.5"/>
                                            <GradientStop Color="#FF5C5C5C" Offset="1"/>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsEnabled" Value="true"/>
                                <Condition Property="ButtonBase.IsPressed" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Border.Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint=" 0.5,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStop Color="#FF747474" Offset="0"/>
                                            <GradientStop Color="#FF595959" Offset="0.5"/>
                                            <GradientStop Color="#FF424242" Offset="1"/>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="UIElement.Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>